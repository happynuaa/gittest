手順
GitHubで新規レポジトリを作る
今回はGitHubのレポジトリをプルしてくるため、レポジトリを先に作成しておく。
↓の"Step 2. Create a Branch"まで実施。developブランチを作ってそちらにプッシュするため、developブランチを作成。
https://guides.github.com/activities/hello-world/

ローカルにフォルダを作成。
GitHubと同期するための作業フォルダを作成しておく。

VSCodeからリモート先Gitを設定する
GitHubの準備が整ったので、次にVSCodeからGitHubにアクセスする。
（この設定がないとプルしてもリモート先が～と怒られる）

まずはVSCodeを開いて「フォルダを開く」メニューから前項で作成したフォルダを開きます。

左のソース管理を選択すると、「ソース管理プロバイダーが選択されていません」と表示されている。
右上に＋のアイコンがあり、ツールチップで「レポジトリの初期化」とあるのでクリックする。
フォルダの選択メニューが出るので、前項で作成したフォルダを選択すると、そのフォルダ配下に隠しフォルダで.gitフォルダが作成される。
これでGitメニューが選択できるようになる。
・・・しかしググるとGUIからの設定がなさそう(´・ω・`)
しかたないのでターミナルよりコマンド実行する。

git remote add origin <GitHubで作成したリポジトリのURL>
レポジトリのURLは前もって作成したレポジトリをブラウザで開くと、「Clone or Download」ボタンがあるのでそれをクリックしたときに表示されているURLをコピーすればよい。

初回のみGitのユーザーデータを設定する
このタイミングだったか失念したが、何かのコマンド実行でGitからユーザーデータが未設定の旨で下記のURLに促される。
https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup
要するに自分を名乗りなさいよと。
下記のコマンドを実行すればいい模様。
（名前がJohn、メアドがjohndoe@example.comの場合）

git config --global user.name "John"
git config --global user.email johndoe@example.com
ちなみに私は直接.gitconfigファイルを開いて、以下を追加することで対応した。

[user]
    name=John
    email=johndoe@example.com
.gitconfigファイルの場所は前述の公式ドキュメントに記述されていて、ターミナルでecho $HOMEと入力するとわかる。
Windowsの場合、ユーザー名がhogeならc:\Users\hogeに配置されている、もしくは配置する必要がある。

リモートからブランチをフェッチする
この状態ではまだリモート先を設定しただけで、リモートのブランチ状況をローカルで把握していない。
そこでfetchコマンドでリモートからブランチ情報を取得する。

git fetch
実行すると以下のようなログが確認できる。
これでようやくローカルでリモート先のブランチが見える状況に整った。

 * [new branch]      develop    -> origin/develop
 * [new branch]      master     -> origin/master
masterブランチからdevelopブランチに切り替え
これでプッシュできると思ったら、プッシュ先はdevelopブランチなので切り替えが必要と気が付く。
最下部のステータスバー左隅のカレントブランチ名をクリックして切り替えできるが、当時は気が付かず初回はコマンドで実行した・・・( ´ー｀)y-~~

git checkout develop
最下部のステータスバー左隅のカレントブランチ名がmaster固定の場合、前述のgit fetchが実行されていないので、実行してみてください。
（半年経過して記事を基にやったら、執筆当時は何らかの操作でgit fetchが実行されていた模様、故に加筆しました。）

正しく行っていれば、エクスプローラーにGitHubに作成されているファイルが表示されるようになります。
そして、最下部のステータスバー左隅のカレントブランチ名がdevelopに代わります。

念願のGitHubへのプッシュｷﾀ――(ﾟ∀ﾟ)――!!
ここまでくれば後は無人のゴールにパスするだけ。
適当に新規ファイルを作成＆文字入力すると、ソース管理が変更を感知してアイコン右下に数値が付与される。
アイコンをクリックしてソース管理に切り替え、ステージングからコミット＋コメント入力してローカルは更新完了。
あとは右上の'・・・'メニューからプッシュを選択すればGitHubに反映される。
初回GitHubへのログインダイアログが表示され、GitHubへのログインが必要になる。（一定間隔でアクセストークン更新のためログインが必要になるはず）

参考
終わった後に調べてみると類似がいくつかあったので載せておきます。
ググって上位3件というのは内緒(;^_^A
https://blog.janjan.net/2018/07/11/visual-studio-code-remote-repository/
http://www.atmarkit.co.jp/ait/articles/1507/21/news017_3.html
https://azriton.github.io/2017/08/23/Visual-Studio-Code%E3%81%A7Git%E3%82%92%E4%BD%BF%E3%81%86/
Qiitaにもすでにあった(;^ω^)
https://qiita.com/masakinihirota/items/8b4d3705c009d7929ca8

編集リクエスト
ストック
いいね
29
qrusadorz
@qrusadorz
会社員時代にフルスタックエンジニアとして活動。その経験を活かして現在はASPとして、コストや手間をかけずに安定性の高いWebアプリを提供することを実践中。Azureは経験済み、GCPは現在経験中、AWSは今後経験予定とし、クラウドサービスを組み合わせて、より良いものを提供できることを目指している。
フォロー
ユーザー登録して、Qiitaをもっと便利に使ってみませんか。
あなたにマッチした記事をお届けします
ユーザーやタグをフォローすることで、あなたが興味を持つ技術分野の情報をまとめてキャッチアップできます
便利な情報をあとで効率的に読み返せます
気に入った記事を「ストック」することで、あとからすぐに検索できます
より詳しく
登録するログインする




前提条件
環境
手順
GitHubで新規レポジトリを作る
ローカルにフォルダを作成。
VSCodeからリモート先Gitを設定する
初回のみGitのユーザーデータを設定する
リモートからブランチをフェッチする
masterブランチからdevelopブランチに切り替え
念願のGitHubへのプッシュｷﾀ――(ﾟ∀ﾟ)――!!
